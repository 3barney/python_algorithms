#!/usr/local/bin/python3
# Python 3 program to find the maximum
# product of a subarray of size k.

# This function returns maximum product
# of a subarray of size k in given array,
# arr[0..n-1]. This function assumes
# that k is smaller than or equal to n.
def findMaxProduct(arr, n, k) :

    # Initialize the MaxProduct to 1,
    # as all elements in the array
    # are positive
    MaxProduct = 1
    for i in range(0, k) :
        MaxProduct = MaxProduct * arr[i]

    prev_product = MaxProduct

    # Consider every product beginning
    # with arr[i] where i varies from
    # 1 to n-k-1
    for i in range(1, n - k + 1) :
        divisor = prev_product if arr[i-1] == 0 else arr[i-1]
        # mult = 1 if arr[i+k-1] == 0 else arr[i+k-1]
        curr_product = (prev_product // divisor) * arr[i+k-1]
        MaxProduct = max(MaxProduct, curr_product)
        prev_product = curr_product


    # Return the maximum product found
    return MaxProduct

string = """73167176531330624919225119674426574742355349194934
96983520312774506326239578318016984801869478851843
85861560789112949495459501737958331952853208805511
12540698747158523863050715693290963295227443043557
66896648950445244523161731856403098711121722383113
62229893423380308135336276614282806444486645238749
30358907296290491560440772390713810515859307960866
70172427121883998797908792274921901699720888093776
65727333001053367881220235421809751254540594752243
52584907711670556013604839586446706324415722155397
53697817977846174064955149290862569321978468622482
83972241375657056057490261407972968652414535100474
82166370484403199890008895243450658541227588666881
16427171479924442928230863465674813919123162824586
17866458359124566529476545682848912883142607690042
24219022671055626321111109370544217506941658960408
07198403850962455444362981230987879927244284909188
84580156166097919133875499200524063689912560717606
05886116467109405077541002256983155200055935729725
71636269561882670428252483600823257530420752963450"""

arr1 = list(map(int, list(string.replace('\n', ''))))
print(arr1)
k = 13
n = len(arr1)
print(findMaxProduct(arr1, n, k))
# k = 4
# print (findMaxProduct(arr1, n, k))
#
# arr2 = [2, 5, 8, 1, 1, 3]
# k = 3
# n = len(arr2)
#
# print(findMaxProduct(arr2, n, k))
#
# Output :
# 4608
# 720
# 80
